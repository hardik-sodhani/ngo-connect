{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.tsx","components/Header/Header.tsx","components/Home/Home.tsx","components/Controls/UploadFile.tsx","components/Admin/Admin.tsx","apiConfig.js","components/SignIn/SignIn.tsx","api/auth.js","components/SignOut/SignOut.tsx","components/ChangePassword/ChangePassword.tsx","components/VolunteerOpportunityCard/VolunteerOpportunityCard.tsx","pages/VolunteerOpenings/VolunteerOpenings.tsx","components/App/App.tsx","index.tsx","images/hcih-logo.png"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","authenticatedOptions","NavDropdown","Item","href","Divider","unauthenticatedOptions","alwaysOptions","Nav","Link","Header","Navbar","bg","variant","Brand","src","Logo","width","height","className","alt","expand","Toggle","aria-controls","Collapse","id","title","Home","state","e","console","log","target","Container","Row","Card","style","onClick","this","handleClick","Body","Text","withRouter","UploadFile","FormFile","label","data-browse","lang","custom","accept","FileTypes","onChange","handleChange","SupportedFileTypes","map","x","join","Admin","loading","handleFile","bind","file","setState","reader","FileReader","rABS","readAsBinaryString","readAsArrayBuffer","onload","bstr","result","wb","xlsx","read","type","cellDates","cellNF","cellText","dateNF","inputData","SheetNames","sheetName","name","data","utils","sheet_to_json","Sheets","files","apiUrls","apiUrl","window","location","hostname","SignIn","event","value","onSignIn","preventDefault","credentials","history","setUser","axios","url","method","email","password","then","res","push","catch","error","username","maxWidth","Title","Form","onSubmit","Group","controlId","Control","required","placeholder","Button","Alert","Heading","SignOut","clearUser","headers","Authorization","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","Label","useStyles","makeStyles","root","minWidth","fontSize","fontWeight","paragraph","marginBottom","span","borderRight","paddingLeft","paddingRight","pos","VolunteerOpportunityCard","ngoSummary","classes","CardContent","Typography","gutterBottom","Box","ngoDescription","supportDescription","beneficiaries","locations","length","index","key","skillsNeeded","skill","CardActions","size","mockNgoSummary","supportNeeded","contactInformation","phone","VolunteerOpenings","display","fluid","between","summaryItem","App","path","appJsx","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ed5dfa9a.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\ninterface IProps {\n  user: any;\n  render: any;\n  [x: string]: any;\n}\n\nconst AuthenticatedRoute = ({user, component: Component, render, ...rest}: IProps) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />;\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={props => (user ? <Component {...props} /> : <Redirect to=\"/\" />)}\n      />\n    );\n  }\n};\n\nexport default AuthenticatedRoute;\n","import React, {Fragment} from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Logo from '../../images/hcih-logo.png';\n\nconst authenticatedOptions = (\n  <Fragment>\n    <NavDropdown.Item href=\"#change-password\">Change Password</NavDropdown.Item>\n    <NavDropdown.Divider />\n    <NavDropdown.Item href=\"#sign-out\">Sign Out</NavDropdown.Item>\n  </Fragment>\n);\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavDropdown.Item href=\"#sign-in\">Sign In</NavDropdown.Item>\n  </Fragment>\n);\n\nconst alwaysOptions = (\n  <Fragment>\n    <Nav.Link href=\"#home\">HOME</Nav.Link>\n    <Nav.Link href=\"#volunteer/openings\">WANT TO VOLUNTEER</Nav.Link>\n    <Nav.Link href=\"#volunteer/signup\">NEED TO VOLUNTEER</Nav.Link>\n    <Nav.Link href=\"#contact\">CONTACT US</Nav.Link>\n  </Fragment>\n);\n\nconst Header = ({user}) => (\n  <Fragment>\n    <Navbar bg=\"light\" variant=\"light\">\n      <Navbar.Brand href=\"#home\">\n        <img\n          src={Logo}\n          width=\"50\"\n          height=\"50\"\n          className=\"d-inline-block align-top mr-3\"\n          alt=\"NC\"\n        />\n        <span className=\"ml-md-5\">HOW CAN I HELP?</span>\n      </Navbar.Brand>\n    </Navbar>\n    <Navbar bg=\"white\" variant=\"light\" expand=\"md\">\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"m-auto\">{alwaysOptions}</Nav>\n        <NavDropdown\n          id=\"basic-nav-dropdown\"\n          title={\n            <img\n              src=\"https://icongr.am/clarity/login.svg?size=30&color=ffffff\"\n              alt=\"Admin\"\n            />\n          }\n        >\n          {user ? authenticatedOptions : unauthenticatedOptions}\n        </NavDropdown>\n      </Navbar.Collapse>\n    </Navbar>\n  </Fragment>\n);\n\nexport default Header;\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\n\nclass Home extends Component<any, any> {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleClick(e) {\n    console.log(e.target);\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Card\n            id=\"wVolunteer\"\n            style={{width: '18rem', height: '18rem'}}\n            className=\"btn m-5\"\n            onClick={this.handleClick}\n          >\n            <Card.Body className=\"align-items-center d-flex justify-content-center\">\n              <Card.Text>I WANT TO VOLUNTEER</Card.Text>\n            </Card.Body>\n          </Card>\n          <Card\n            id=\"nVolunteer\"\n            style={{width: '18rem', height: '18rem'}}\n            className=\"btn m-5\"\n            onClick={this.handleClick}\n          >\n            <Card.Body className=\"align-items-center d-flex justify-content-center\">\n              <Card.Text>I NEED TO VOLUNTEER</Card.Text>\n            </Card.Body>\n          </Card>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(Home);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormFile from 'react-bootstrap/FormFile';\n\ninterface IProps {\n  FileTypes: any;\n  handleChange: any;\n}\nconst UploadFile = (props: IProps) => {\n  return (\n    <FormFile\n      id=\"custom-file-translate-scss\"\n      label=\"Upload excel file\"\n      data-browse=\"Upload File\"\n      lang=\"en\"\n      custom\n      accept={props.FileTypes}\n      onChange={props.handleChange}\n    />\n  );\n};\n\nUploadFile.propTypes = {\n  FileTypes: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default UploadFile;\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport UploadFile from '../Controls/UploadFile';\nimport xlsx from 'xlsx';\n\n/* list of supported file types */\nconst SupportedFileTypes = ['xlsx', 'xlsb', 'xlsm', 'xls']\n  .map((x) => {\n    return '.' + x;\n  })\n  .join(',');\n\nclass Admin extends Component<any, any> {\n  constructor(props) {\n    super(props);\n    this.state = {loading: false};\n    this.handleFile = this.handleFile.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleFile(file) {\n    this.setState({loading: true});\n    /* Boilerplate to set up FileReader */\n    const reader = new FileReader();\n    const rABS = !!reader.readAsBinaryString;\n    if (rABS) reader.readAsBinaryString(file);\n    else reader.readAsArrayBuffer(file);\n    reader.onload = (e) => {\n      /* Parse data */\n      const bstr = e && e.target && e.target.result;\n      const wb = xlsx.read(bstr, {\n        type: rABS ? 'binary' : 'array',\n        cellDates: true,\n        cellNF: false,\n        cellText: false,\n        dateNF: 'YYYY-MM-DD',\n      });\n\n      const inputData = wb.SheetNames.map((sheetName) => {\n        const sData = xlsx.utils.sheet_to_json(wb.Sheets[sheetName], {\n          // @shiju - commenting out the line below as it was throwing a type error,\n          // it seems that type of \"cellDates\" argument doesn't exist on the method\n          // cellDates: true,\n          dateNF: 'YYYY-MM-DD',\n        });\n        return {\n          name: sheetName,\n          data: sData,\n        };\n      });\n\n      console.log('To be processed inputData: ', inputData);\n    };\n  }\n\n  handleChange(e) {\n    const files = e.target.files;\n    console.log('Uploaded files:', files);\n    if (files && files[0]) this.handleFile(files[0]);\n  }\n\n  render() {\n    return (\n      <div className=\"m-2 col-md-6 float-right\">\n        <UploadFile FileTypes={SupportedFileTypes} handleChange={this.handleChange} />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Admin);\n","let apiUrl;\nconst apiUrls = {\n  production: 'https://aqueous-atoll-85096.herokuapp.com',\n  development: 'http://localhost:4741'\n};\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development;\n} else {\n  apiUrl = apiUrls.production;\n}\n\nexport default apiUrl;\n","import React, {Component} from 'react';\nimport {withRouter, RouteComponentProps} from 'react-router-dom';\n\nimport {signIn} from '../../api/auth';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Alert from 'react-bootstrap/Alert';\n\ninterface IProps extends RouteComponentProps {\n  history: any;\n  setUser: any;\n}\n\nclass SignIn extends Component<IProps, any> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n    };\n  }\n\n  handleChange = event =>\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n\n  onSignIn = event => {\n    event.preventDefault();\n\n    const {history, setUser} = this.props;\n\n    signIn(this.state)\n      .then(res => setUser(res.data.user))\n      .then(() => history.push('/'))\n      .catch(error => {\n        this.setState({username: '', password: ''});\n        console.log(error);\n      });\n  };\n\n  render() {\n    const {username, password} = this.state;\n\n    return (\n      <Card bg=\"success\" className=\"bg-light m-2\" style={{maxWidth: '50rem'}}>\n        <Card.Body>\n          <Card.Title>Sign In</Card.Title>\n          <Form onSubmit={this.onSignIn}>\n            <Form.Group controlId=\"username\">\n              <Form.Control\n                required\n                type=\"text\"\n                name=\"username\"\n                value={username}\n                placeholder=\"Username\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"password\">\n              <Form.Control\n                required\n                name=\"password\"\n                value={password}\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n          <hr />\n          <Alert variant=\"warning\">\n            <Alert.Heading>Admin only</Alert.Heading>\n            <p>This is a restricted section for admin only.</p>\n          </Alert>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default withRouter(SignIn);\n","import apiUrl from '../apiConfig';\nimport axios from 'axios';\n\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  });\n};\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  });\n};\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Token token=${user.token}`\n    }\n  });\n};\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Token token=${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  });\n};\n","import {Component} from 'react';\nimport {withRouter, RouteComponentProps} from 'react-router-dom';\nimport {signOut} from '../../api/auth';\n\ninterface IProps extends RouteComponentProps {\n  history: any;\n  user: any;\n  clearUser: any;\n}\n\nclass SignOut extends Component<IProps, any> {\n  componentDidMount() {\n    const {history, clearUser, user} = this.props;\n\n    signOut(user)\n      .finally(() => history.push('/'))\n      .finally(() => clearUser());\n  }\n\n  render() {\n    return '';\n  }\n}\n\nexport default withRouter(SignOut);\n","import React, {Component} from 'react';\nimport {withRouter, RouteComponentProps} from 'react-router-dom';\nimport {changePassword} from '../../api/auth';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\ninterface IProps extends RouteComponentProps {\n  history: any;\n  user: any;\n}\n\ninterface IState {\n  oldPassword: string;\n  newPassword: string;\n  [x: number]: any;\n}\n\nclass ChangePassword extends Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      oldPassword: '',\n      newPassword: '',\n    };\n  }\n\n  handleChange = event =>\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n\n  onChangePassword = event => {\n    event.preventDefault();\n\n    const {history, user} = this.props;\n\n    changePassword(this.state, user)\n      .then(() => history.push('/'))\n      .catch(error => {\n        this.setState({oldPassword: '', newPassword: ''});\n        console.log(error);\n      });\n  };\n\n  render() {\n    const {oldPassword, newPassword} = this.state;\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n          <h3>Change Password</h3>\n          <Form onSubmit={this.onChangePassword}>\n            <Form.Group controlId=\"oldPassword\">\n              <Form.Label>Old password</Form.Label>\n              <Form.Control\n                required\n                name=\"oldPassword\"\n                value={oldPassword}\n                type=\"password\"\n                placeholder=\"Old Password\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"newPassword\">\n              <Form.Label>New Password</Form.Label>\n              <Form.Control\n                required\n                name=\"newPassword\"\n                value={newPassword}\n                type=\"password\"\n                placeholder=\"New Password\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ChangePassword);\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {Box} from '@material-ui/core';\nimport './VolunteerOpportunityCard.scss';\nimport {INGOSummary} from '../../common/interfaces';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    height: '100%',\n  },\n  title: {\n    fontSize: '24px',\n    fontWeight: 500,\n  },\n  paragraph: {\n    fontSize: '16px',\n    fontWeight: 100,\n    marginBottom: '10px',\n  },\n  span: {\n    borderRight: '1px solid black',\n    paddingLeft: '5px',\n    paddingRight: '5px',\n    '&:last-of-type': {\n      borderRight: 'none',\n    },\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\ninterface IProps {\n  ngoSummary: INGOSummary;\n}\n\nexport default function VolunteerOpportunityCard(props: IProps) {\n  const {ngoSummary} = props;\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} variant=\"h4\" component=\"h1\" gutterBottom>\n          {ngoSummary.name}\n        </Typography>\n        <Box>\n          <Typography variant=\"h6\" component=\"h3\" className={classes.paragraph}>\n            <span className=\"bold-heading\">About: </span> {ngoSummary.ngoDescription}\n          </Typography>\n        </Box>\n        <Box>\n          <Typography variant=\"h6\" component=\"h3\" className={classes.paragraph}>\n            <span className=\"bold-heading\">Support Needed: </span>{' '}\n            {ngoSummary.supportDescription}\n          </Typography>\n        </Box>\n        <Box>\n          <Typography variant=\"h6\" component=\"h3\" className={classes.paragraph}>\n            <span className=\"bold-heading\">Beneficiaries: </span>{' '}\n            {ngoSummary.beneficiaries}\n          </Typography>\n        </Box>\n\n        <Box className={classes.paragraph}>\n          <span className=\"bold-heading\">Location(s): </span>\n          {ngoSummary.locations &&\n            ngoSummary.locations.length &&\n            ngoSummary.locations.map((location, index) => {\n              return (\n                <span className={classes.span} key={index}>\n                  {location}\n                </span>\n              );\n            })}\n        </Box>\n\n        <Box className={classes.paragraph}>\n          <span className=\"bold-heading\">Skills: </span>\n          {ngoSummary.skillsNeeded &&\n            ngoSummary.skillsNeeded.length &&\n            ngoSummary.skillsNeeded.map((skill, index) => {\n              return (\n                <span className={classes.span} key={index}>\n                  {skill}\n                </span>\n              );\n            })}\n        </Box>\n      </CardContent>\n      <CardActions>\n        {/* TODO: Evolve button styles and add functionality in future task / story */}\n        <Button size=\"medium\">Call / WhatsApp</Button>\n        <Button size=\"medium\">Email</Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, {Component} from 'react';\nimport {withRouter, RouteComponentProps} from 'react-router-dom';\nimport {Box} from '@material-ui/core';\nimport {Grid, Row} from 'react-flexbox-grid';\nimport VolunteerOpportunityCard from '../../components/VolunteerOpportunityCard/VolunteerOpportunityCard';\nimport './VolunteerOpenings.scss';\nimport {INGOSummary} from '../../common/interfaces';\n\n// TODO: Remove mock data below once real data exists and can be fetched from API\nconst mockNgoSummary: INGOSummary[] = [\n  {\n    name: 'Akshay Patra',\n    ngoDescription:\n      'Running mid-day meal programmes and serving school lunches to over 1.8 million children across 12 states and 2 union territories',\n    supportNeeded: 'Online Fundraising',\n    supportDescription:\n      'Register yourself as an online fund raising volunteer. Fund raised will go to providing mid-day meal to the school children. Dedicated fundraisers are acknowledged for their efforts on select collaterals of Akshaya Patra.',\n    beneficiaries: 'School Children',\n    locations: ['Remote / Virtual', 'Hyderabad'],\n    skillsNeeded: ['Public Relations', 'Fundraising experience', 'Marketing'],\n    contactInformation: {\n      email: 'anil.rs@akshayapatra.org',\n      phone: '080 30143400',\n    },\n  },\n  {\n    name: 'Bhumi India',\n    ngoDescription:\n      'The organisation provides youngsters a platform to serve the society and bridges the gap between the educated and the uneducated',\n    supportNeeded: 'Content generation for education',\n    supportDescription:\n      'Our volunteers educate and mentor children from orphanages, slum and village community centres across the country to give them a better future, which will benefit them as well as our country.',\n    beneficiaries: 'Young adults and children',\n    locations: ['Remote / Virtual', 'Bombay', 'Delhi'],\n    skillsNeeded: ['Microsoft Office skills'],\n    contactInformation: {\n      email: 'contact@bhumi.ngo',\n    },\n  },\n  {\n    name: 'Bhumi India',\n    ngoDescription:\n      'The organisation provides youngsters a platform to serve the society and bridges the gap between the educated and the uneducated',\n    supportNeeded: 'Content generation for education',\n    supportDescription:\n      'Our volunteers educate and mentor children from orphanages, slum and village community centres across the country to give them a better future, which will benefit them as well as our country.',\n    beneficiaries: 'Young adults and children',\n    locations: ['Remote / Virtual', 'Bombay', 'Delhi'],\n    skillsNeeded: ['Microsoft Office skills'],\n    contactInformation: {\n      email: 'contact@bhumi.ngo',\n    },\n  },\n  {\n    name: 'Bhumi India',\n    ngoDescription:\n      'The organisation provides youngsters a platform to serve the society and bridges the gap between the educated and the uneducated',\n    supportNeeded: 'Content generation for education',\n    supportDescription:\n      'Our volunteers educate and mentor children from orphanages, slum and village community centres across the country to give them a better future, which will benefit them as well as our country.',\n    beneficiaries: 'Young adults and children',\n    locations: ['Remote / Virtual', 'Bombay', 'Delhi'],\n    skillsNeeded: ['Microsoft Office skills'],\n    contactInformation: {\n      email: 'contact@bhumi.ngo',\n    },\n  },\n];\n\nclass VolunteerOpenings extends Component<any, any> {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  /*\n    TODO: make an API call to fetch volunteer opportunity data to pass down to VolunteerOpportunityCard component\n    1. I recommend we use Apollo / GraphQL to hit our API endpoints, it's a seamless and smooth experience with React\n  */\n\n  render() {\n    return (\n      <Box component=\"div\" className=\"volunteer-openings-page-container\" display=\"block\">\n        <Grid fluid className=\"grid\">\n          <Row className=\"data-row\" between=\"xs\">\n            {mockNgoSummary && mockNgoSummary.length && (\n              <Box className=\"volunteer-opening-flex-container\">\n                {mockNgoSummary.map((summaryItem, index) => {\n                  return (\n                    <div className=\"volunteer-opening-flex-item\" key={index}>\n                      <VolunteerOpportunityCard ngoSummary={summaryItem} />\n                    </div>\n                  );\n                })}\n              </Box>\n            )}\n          </Row>\n        </Grid>\n      </Box>\n    );\n  }\n}\n\nexport default withRouter(VolunteerOpenings);\n","import React, {Component, Fragment} from 'react';\nimport {Route} from 'react-router-dom';\n\nimport AuthenticatedRoute from '../AuthenticatedRoute/AuthenticatedRoute';\nimport Header from '../Header/Header';\nimport Home from '../Home/Home';\nimport Admin from '../Admin/Admin';\nimport SignIn from '../SignIn/SignIn';\nimport SignOut from '../SignOut/SignOut';\nimport ChangePassword from '../ChangePassword/ChangePassword';\nimport VolunteerOpenings from '../../pages/VolunteerOpenings/VolunteerOpenings';\n\nclass App extends Component<any, any> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n    };\n  }\n\n  setUser = (user) => this.setState({user});\n\n  clearUser = () => this.setState({user: null});\n\n  render() {\n    const {user} = this.state;\n\n    return (\n      <Fragment>\n        <Header user={user} />\n        <main className=\"container\">\n          <Route path=\"/home\" render={() => <Home />} />\n          <Route path=\"/volunteer/openings\" render={() => <VolunteerOpenings />} />\n          <Route path=\"/sign-in\" render={() => <SignIn setUser={this.setUser} />} />\n          <Route path=\"/admin\" render={() => <Admin setUser={this.setUser} />} />\n          <AuthenticatedRoute\n            user={user}\n            path=\"/sign-out\"\n            render={() => <SignOut clearUser={this.clearUser} user={user} />}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path=\"/change-password\"\n            render={() => <ChangePassword user={user} />}\n          />\n        </main>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './components/App/App';\nimport {HashRouter} from 'react-router-dom';\n\nconst appJsx = (\n  <HashRouter>\n    <App />\n  </HashRouter>\n);\n\nReactDOM.render(appJsx, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/hcih-logo.989d0147.png\";"],"sourceRoot":""}